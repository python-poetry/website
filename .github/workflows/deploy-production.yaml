name: "Deploy Production"

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  deploy-preview:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Build Assets
        run: npm ci && npm run prod

      # Ruby must be set up after running "npm ci" because installing hugo-bin via npm
      # removes the vendor directory that is created by "bundle install"
      # https://github.com/fenneclab/hugo-bin/blob/a5500e4f622f46886947d3438243bd97cfe6c04c/lib/install.js#L28-L30
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Fetch Documentation
        run: |
          python -m pip install poetry
          poetry install --no-root --only main
          poetry run python bin/website build

      - name: Start Deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: Production

      - name: Build
        run: npx hugo --minify --logLevel info

      - name: Build search index
        continue-on-error: true
        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}
          ALGOLIA_INDEX_FILE: "algolia.json"
        run: |
          bundle exec bin/build_index.rb
          npm run algolia

      - name: Deploy
        uses: amondnet/vercel-action@v25
        id: vercel-action
        with:
          vercel-version: 39.1.3
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: python-poetry
          github-comment: false
          vercel-args: "--prod"
          working-directory: public

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel-action.outputs.preview-url }}
          env: ${{ steps.deployment.outputs.env }}
